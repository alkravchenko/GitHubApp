//
//  Repository+CoreDataProperties.swift
//  GutHubApp
//
//  Created by Kravchenko on 30.01.2018.
//  Copyright Â© 2018 WaveAccess. All rights reserved.
//
//

import Foundation
import CoreData

private let ratingKey = "rating"
private let forksCountKey = "forksCount"

/// Core Data class extension for `Repository` entity and its generated properties (some cases was manually changed in autogenerated code)
extension Repository {

    @nonobjc public class func fetchRequest() -> NSFetchRequest<Repository> {
        return NSFetchRequest<Repository>(entityName: "Repository")
    }

    @NSManaged public var identifier: Int64
    @NSManaged public var name: String
    @NSManaged public var repositoryDescription: String?
    
    /// Custom implementation of attribute to allow Swift optionals for `Int64` type
    public var rating: Int64? {
        get {
            willAccessValue(forKey: ratingKey)
            defer { didAccessValue(forKey: ratingKey) }
            
            return primitiveValue(forKey: ratingKey) as? Int64
        }
        set {
            willChangeValue(forKey: ratingKey)
            defer { didChangeValue(forKey: ratingKey) }
            
            guard let value = newValue else {
                setPrimitiveValue(nil, forKey: ratingKey)
                return
            }
            setPrimitiveValue(value, forKey: ratingKey)
        }
    }
    
    /// Custom implementation of attribute to allow Swift optionals for `Int64` type
    public var forksCount: Int64? {
        get {
            willAccessValue(forKey: forksCountKey)
            defer { didAccessValue(forKey: forksCountKey) }
            
            return primitiveValue(forKey: forksCountKey) as? Int64
        }
        set {
            willChangeValue(forKey: forksCountKey)
            defer { didChangeValue(forKey: forksCountKey) }
            
            guard let value = newValue else {
                setPrimitiveValue(nil, forKey: forksCountKey)
                return
            }
            setPrimitiveValue(value, forKey: forksCountKey)
        }
    }
    @NSManaged public var updatedAt: Date?
    @NSManaged public var language: String
    @NSManaged public var ownerName: String

}
